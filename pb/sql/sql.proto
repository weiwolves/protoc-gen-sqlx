syntax = "proto3";

package sql;
option go_package = "github.com/weiwolves/protoc-gen-sqlx/pb/sql;sql";

import "google/protobuf/descriptor.proto";

message ExtraField {
    string type = 1;
    string name = 2;
    string tags = 3;
}

extend google.protobuf.MessageOptions {
    SqlxMessageOptions opts = 99901;
}

message SqlxMessageOptions {
    bool orm = 1;
    bool jsonb = 2;
    bool gorm = 3;
    string table = 4;
    string driver = 5;
    repeated ExtraField include = 6;
    string request = 7;
    bool user = 8;
    bool product = 9;
}

// Field level specifications
extend google.protobuf.FieldOptions {
    SqlxFieldOptions field = 99902;
}
message SqlxFieldOptions {
    string name = 1;
    string colname  = 2;
    string type = 3;
    string tags = 4;
    bool drop = 5;
    bool pk = 6;
    string fk = 7;
    string customname = 8;

}

// To be used in (leiu of) the interceptor
extend google.protobuf.ServiceOptions {
    SqlxServiceOptions server = 99903;
}

message SqlxServiceOptions {
    bool autogen = 1;
}

extend google.protobuf.MethodOptions {
    SqlxMethodOptions method = 99904;
}

message SqlxMethodOptions {
    bool jsonb = 1;
}

// SortCriteria represents sort criteria
message SortCriteria {
    // Tag is a JSON tag.
    string tag = 1;
    // Order is a sort order.
    enum Order {
        // ascending sort order
        ASC = 0;
        // descending sort order
        DESC = 1;
    }
    Order order = 2;
}

// Sorting represents list of sort criterias.
message Sorting {
    repeated SortCriteria sort = 1;
}

message Filtering {
    string name = 1;
    enum Mode {
        // EQ in sql =
        EQ = 0;
        // NE  in sql !=
        NE = 1;
        // GT in sql >
        GT = 2;
        // GE in sql >=
        GE = 3;
        // LT in sql <
        LT = 4;
        // LE in sql <=
        LE = 5;
        // IS_NULL in sql IS NULL
        IS_NULL = 6;
        // NOT_NULL in sql IS NOT NULL
        NOT_NULL = 7;
    }
    Mode mode = 2;
    string value = 3;
}

message PageInfo {
    int64 current = 1;
    // The service may optionally include the total number of resources being paged.
    int64 size = 2;
    // The service may optionally include the offset of the next page of resources.
    // A null value indicates no more pages.
    int64 offset = 3;
    int64 limit = 4;
}

message Query {
    string id = 1;
    repeated string ids = 2;
    oneof params {
        int64 page = 3;
        int64 first = 4;
        int64 last = 5;
    }
    int64 limit = 6;
    repeated Filtering filter = 7;
    repeated string field = 8;
}

message Response {
    bytes data = 1;
}

message ResponseList {
    repeated bytes data = 1;
    int64 total = 2;
    PageInfo page_info = 3;
}

message MutationField {
    string name = 1;
    string value = 2;
}

message MutationResponse {
    int64 id = 1;
}

message Mutation {
    string id = 1;
    repeated MutationField fields = 8;
}
